====================
DocTest for 1-mylist
====================

-----importing function and class------

>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> type(my_list)
<class '1-my_list.MyList'>


-----Testing-----

---Regular---

Empty list:
>>> print(my_list)
[]

Single list:
>>> my_list = MyList([1, 3, 5]
>>> print(my_list)
[1, 3, 5]

Index replace:
>>>my_list[0] = 7
>>>print(my_list)
[7, 3, 5]

Removing from list:
>>> my_list.remove(3)
>>> print(my_list)
[7, 5]

List of Strings:
>>> my_list = MyList(["This", "is", "a", "test]
>>> print(my_list)
["This", "is", "a", "test]

Sorting list:
>>> my_list.print_sorted()
["a", "is", "test", "This"]

Appending to list:
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(3)
>>> my_list.append(2)
>>> print(my_list)
[1, 3, 2]

Making an unsorted list:
>>> my_list = MyList([4, 6, 3, 2, 12, 9])
>>> print(my_list)
[4, 6, 3, 2, 12, 9]

>>> my_list.print_sorted()
[2, 3, 4, 6, 9, 12]

>>>print(my_list)
[4, 6, 3, 2, 12, 9]

Sorting an empty list:
>>> my_list = MyList()
>>> my_list.print_sorted()
[]

---Incorrect Inputs---

Multiple Arguments:
>>>my_list = MyList([1, 2], [4, 5])
Traceback (most recent call last):
TypeError: list expected at most 1 argument, got 2

Sorting different types:
>>> my_list = MyList(["Hello", 256, "Float"])
>>> my_list.print_sorted()
Traceback (most recent call last):
TypeError: '<' not supported between instances of 'int' and 'str'

Removing items not in list:
>>> my_list.remove(9)
Traceback (most recent call last):
ValueError: list.remove(x): x not in list
