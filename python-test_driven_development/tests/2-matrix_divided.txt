The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 5)
	[[0.2, 0.4, 0.6], [0.8, 1.0, 1.2]]

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided([[1, 2], [4, 5]], 0.1)
	[[10.0, 20.0], [40.0, 50.0]]

	>>> matrix_divided([[1, 2, 3], [4, 5, float("inf")]], 2)
	[[0.5, 1.0, 1.5], [2.0, 2.5, inf]]

	>>> matrix_divided([1, 3, 5], 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([], 1)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[]], 1)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2, 3], [4, 5, 6], "Holberton"], 5)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2, 3], ["4", "5", "6"]], 2)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2, 3], [4]], 1)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]])
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "School")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float("NaN"))
	[[nan, nan, nan], [nan, nan, nan]]

	>>> matrix_divided([[3, 4], [6, 7]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero
